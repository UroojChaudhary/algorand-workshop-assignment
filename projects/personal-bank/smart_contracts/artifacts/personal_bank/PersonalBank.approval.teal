#pragma version 10
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    // smart_contracts/personal_bank/contract.algo.ts:3
    // export class PersonalBank extends Contract {
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x36205d95 // method "deposit(string)string"
    txna ApplicationArgs 0
    match main_deposit_route@3

main_after_if_else@10:
    // smart_contracts/personal_bank/contract.algo.ts:3
    // export class PersonalBank extends Contract {
    pushint 0 // 0
    return

main_deposit_route@3:
    // smart_contracts/personal_bank/contract.algo.ts:6
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/personal_bank/contract.algo.ts:3
    // export class PersonalBank extends Contract {
    txna ApplicationArgs 1
    extract 2 0
    // smart_contracts/personal_bank/contract.algo.ts:6
    // @abimethod()
    callsub deposit
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@6:
    // smart_contracts/personal_bank/contract.algo.ts:3
    // export class PersonalBank extends Contract {
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// smart_contracts/personal_bank/contract.algo.ts::PersonalBank.deposit(githubHandle: bytes) -> bytes:
deposit:
    // smart_contracts/personal_bank/contract.algo.ts:6-7
    // @abimethod()
    // public deposit(githubHandle: string) {
    proto 1 1
    // smart_contracts/personal_bank/contract.algo.ts:9
    // assert(githubHandle !== '', 'Invalid GitHub handle')
    frame_dig -1
    pushbytes ""
    !=
    assert // Invalid GitHub handle
    // smart_contracts/personal_bank/contract.algo.ts:4
    // public githubBox = BoxMap<Account, string>({ keyPrefix: 'github' })
    pushbytes "github"
    // smart_contracts/personal_bank/contract.algo.ts:11
    // const sender = Global.currentApplicationAddress
    global CurrentApplicationAddress
    // smart_contracts/personal_bank/contract.algo.ts:4
    // public githubBox = BoxMap<Account, string>({ keyPrefix: 'github' })
    concat
    // smart_contracts/personal_bank/contract.algo.ts:13
    // this.githubBox(sender).value = githubHandle
    dup
    box_del
    pop
    frame_dig -1
    box_put
    // smart_contracts/personal_bank/contract.algo.ts:15
    // return githubHandle
    frame_dig -1
    retsub
